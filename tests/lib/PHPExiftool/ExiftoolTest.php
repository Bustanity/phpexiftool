<?php

namespace PHPExiftool;

require_once dirname(__FILE__) . '/../../../lib/PHPExiftool/Exiftool.php';

/**
 * Test class for Exiftool.
 * Generated by PHPUnit on 2012-03-16 at 11:14:36.
 */
class ExiftoolTest extends \PHPUnit_Framework_TestCase
{

  /**
   * @var Exiftool
   */
  protected $object;

  protected function setUp()
  {
    $this->object = new Exiftool;
  }

  /**
   * @covers {\PHPExiftool\Exiftool}::{read}
   */
  public function testRead()
  {
    $entity = $this->object->read(new \SplFileInfo(__DIR__ . '/../../files/ExifTool.jpg'));

    $this->assertInstanceOf('\\PHPExiftool\\FileEntity', $entity);

    try
    {
      $this->object->read(new \SplFileInfo(__DIR__ . '/../../files/UnUnknownfile.jpg'));
      $this->fail('Should not work on unexistant files');
    }
    catch(\LogicException $e)
    {

    }
    try
    {
      $this->object->read(new \SplFileInfo(__DIR__ ));
      $this->fail('Should not work on unexistant directries');
    }
    catch(\LogicException $e)
    {

    }
  }

  /**
   * @covers {\PHPExiftool\Exiftool}::{readDirectory}
   */
  public function testReadDirectory()
  {
    $entities = $this->object->readDirectory(new \SplFileInfo(__DIR__ . '/../../files'), true);

    $this->assertInstanceOf('\Doctrine\Common\Collections\ArrayCollection', $entities);
    $this->assertEquals(2, $entities->count(), 'Two files when recursive');

    foreach($entities as $entity)
    {
      $this->assertInstanceOf('\PHPExiftool\FileEntity', $entity);
    }

    $entities = $this->object->readDirectory(new \SplFileInfo(__DIR__ . '/../../files'), false);

    $this->assertInstanceOf('\Doctrine\Common\Collections\ArrayCollection', $entities);
    $this->assertEquals(1, $entities->count(), 'One file when not recursive');

    try
    {
      $this->object->readDirectory(new \SplFileInfo(__DIR__ . '/../../unknowndir'), true);
      $this->fail('Should not work on unexistant directries');
    }
    catch(\LogicException $e)
    {

    }
  }

  /**
   * @covers {\PHPExiftool\Exiftool}::{Xtract}
   */
  public function testXtract()
  {
    try
    {
      $this->object->Xtract(new \SplFileInfo(__DIR__ . '/../../filesdff'));
      $this->fail();
    }
    catch(\Exception $e)
    {

    }

    $dom = new \DOMDocument();

    if(!$dom->loadXML($this->object->Xtract(new \SplFileInfo(__DIR__ . '/../../files'))))
    {
      $this->fail('Should return good XML');
    }

    if(!$dom->loadXML($this->object->Xtract(new \SplFileInfo(__DIR__ . '/../../files/ExifTool.jpg'))))
    {
      $this->fail('Should return good XML');
    }

  }

  /**
   * @covers {\PHPExiftool\Exiftool}::{listDatas}
   */
  public function testListDatas()
  {
    $this->object->listDatas();
  }


}
